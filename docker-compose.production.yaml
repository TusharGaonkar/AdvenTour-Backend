version: '3.8'

services:
  redis:
    image: redis:7.2.4-alpine
    container_name: redis
    ports:
      - '6379:6379'
    restart: unless-stopped
    networks:
      - app-network

  adventour-backend:
    depends_on:
      - redis
    container_name: adventour-backend
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    env_file:
      - ./config.env
    restart: unless-stopped
    networks:
      - app-network
    ports:
      - '${PORT:-2000}:${PORT:-2000}'
    volumes:
      - /app/node_modules # prevent node_modules to be overwritten create anonymous volume

  adventour-nginx-proxy:
    image: nginx:mainline-alpine
    container_name: adventour-nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - app-network
    depends_on:
      - adventour-backend

# disabled by default , use --profile gen-cert while building docker-compose
  certbot:
    depends_on:
      - adventour-nginx-proxy
    image: certbot/certbot
    profiles: ["gen-cert"]
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --email gaonkar.tushar01@gmail.com -d adventour.live -d www.adventour.live --agree-tos

networks:
  app-network:
    driver: bridge
